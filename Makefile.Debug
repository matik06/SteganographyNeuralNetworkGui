#############################################################################
# Makefile for building: NeuralNetworkGui
# Generated by qmake (2.01a) (Qt 4.5.2) on: pon. maj 17 11:26:43 2010
# Project:  NeuralNetworkGui.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -Idebug -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = src/ReadDataFile.cpp \
		src/Singleton.cpp \
		src/WriteDataFile.cpp \
		src/FileManager.cpp \
		src/neuralNetwork/Layer.cpp \
		src/neuralNetwork/LinearNeuron.cpp \
		src/neuralNetwork/NeuralNetwork.cpp \
		src/neuralNetwork/Neuron.cpp \
		src/neuralNetwork/RecognizeTool.cpp \
		src/neuralNetwork/SigmoidalBPNeuron.cpp \
		src/neuralNetwork/SigmoidalNeuron.cpp \
		src/neuralNetwork/SigmoidalUPNeuron.cpp \
		src/neuralNetwork/TanhNeuron.cpp \
		src/trainingAlgorithms/DifferentialEvolution.cpp \
		src/trainingAlgorithms/EvolutionaryAlgorithm.cpp \
		src/trainingAlgorithms/Individual.cpp \
		src/trainingAlgorithms/Population.cpp \
		src/trainingAlgorithms/SOMA.cpp \
		learningstacistics.cpp \
		de.cpp \
		layerssize.cpp \
		mainwindow.cpp \
		networksettings.cpp \
		soma.cpp \
		main.cpp \
		neuralnetworkgui.cpp debug/moc_learningstacistics.cpp \
		debug/moc_de.cpp \
		debug/moc_layerssize.cpp \
		debug/moc_mainwindow.cpp \
		debug/moc_networksettings.cpp \
		debug/moc_soma.cpp \
		debug/moc_neuralnetworkgui.cpp
OBJECTS       = debug/ReadDataFile.o \
		debug/Singleton.o \
		debug/WriteDataFile.o \
		debug/FileManager.o \
		debug/Layer.o \
		debug/LinearNeuron.o \
		debug/NeuralNetwork.o \
		debug/Neuron.o \
		debug/RecognizeTool.o \
		debug/SigmoidalBPNeuron.o \
		debug/SigmoidalNeuron.o \
		debug/SigmoidalUPNeuron.o \
		debug/TanhNeuron.o \
		debug/DifferentialEvolution.o \
		debug/EvolutionaryAlgorithm.o \
		debug/Individual.o \
		debug/Population.o \
		debug/SOMA.o \
		debug/learningstacistics.o \
		debug/de.o \
		debug/layerssize.o \
		debug/mainwindow.o \
		debug/networksettings.o \
		debug/soma.o \
		debug/main.o \
		debug/neuralnetworkgui.o \
		debug/moc_learningstacistics.o \
		debug/moc_de.o \
		debug/moc_layerssize.o \
		debug/moc_mainwindow.o \
		debug/moc_networksettings.o \
		debug/moc_soma.o \
		debug/moc_neuralnetworkgui.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/debug_and_release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/build_pass.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		NeuralNetworkGui.pro
QMAKE_TARGET  = NeuralNetworkGui
DESTDIR       = 
TARGET        = NeuralNetworkGui

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug $(TARGET)

$(TARGET): ui_de.h ui_layerssize.h ui_mainwindow.h ui_networksettings.h ui_soma.h ui_neuralnetworkgui.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake:  FORCE
	@$(QMAKE) -unix CONFIG+=debug_and_release -o Makefile.Debug NeuralNetworkGui.pro

dist: 
	@$(CHK_DIR_EXISTS) debug/NeuralNetworkGui1.0.0 || $(MKDIR) debug/NeuralNetworkGui1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) debug/NeuralNetworkGui1.0.0/ && $(COPY_FILE) --parents src/ReadDataFile.h src/Singleton.h src/WriteDataFile.h src/FileManager.h src/neuralNetwork/Layer.h src/neuralNetwork/LinearNeuron.h src/neuralNetwork/NeuralNetwork.h src/neuralNetwork/Neuron.h src/neuralNetwork/RecognizeTool.h src/neuralNetwork/SigmoidalBPNeuron.h src/neuralNetwork/SigmoidalNeuron.h src/neuralNetwork/SigmoidalUPNeuron.h src/neuralNetwork/TanhNeuron.h src/trainingAlgorithms/DifferentialEvolution.h src/trainingAlgorithms/EvolutionaryAlgorithm.h src/trainingAlgorithms/Individual.h src/trainingAlgorithms/Population.h src/trainingAlgorithms/SOMA.h learningstacistics.h src/EnumTypes.h de.h layerssize.h mainwindow.h networksettings.h soma.h neuralnetworkgui.h debug/NeuralNetworkGui1.0.0/ && $(COPY_FILE) --parents src/ReadDataFile.cpp src/Singleton.cpp src/WriteDataFile.cpp src/FileManager.cpp src/neuralNetwork/Layer.cpp src/neuralNetwork/LinearNeuron.cpp src/neuralNetwork/NeuralNetwork.cpp src/neuralNetwork/Neuron.cpp src/neuralNetwork/RecognizeTool.cpp src/neuralNetwork/SigmoidalBPNeuron.cpp src/neuralNetwork/SigmoidalNeuron.cpp src/neuralNetwork/SigmoidalUPNeuron.cpp src/neuralNetwork/TanhNeuron.cpp src/trainingAlgorithms/DifferentialEvolution.cpp src/trainingAlgorithms/EvolutionaryAlgorithm.cpp src/trainingAlgorithms/Individual.cpp src/trainingAlgorithms/Population.cpp src/trainingAlgorithms/SOMA.cpp learningstacistics.cpp de.cpp layerssize.cpp mainwindow.cpp networksettings.cpp soma.cpp main.cpp neuralnetworkgui.cpp debug/NeuralNetworkGui1.0.0/ && $(COPY_FILE) --parents de.ui layerssize.ui mainwindow.ui networksettings.ui soma.ui neuralnetworkgui.ui debug/NeuralNetworkGui1.0.0/ && (cd `dirname debug/NeuralNetworkGui1.0.0` && $(TAR) NeuralNetworkGui1.0.0.tar NeuralNetworkGui1.0.0 && $(COMPRESS) NeuralNetworkGui1.0.0.tar) && $(MOVE) `dirname debug/NeuralNetworkGui1.0.0`/NeuralNetworkGui1.0.0.tar.gz . && $(DEL_FILE) -r debug/NeuralNetworkGui1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Debug


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_learningstacistics.cpp debug/moc_de.cpp debug/moc_layerssize.cpp debug/moc_mainwindow.cpp debug/moc_networksettings.cpp debug/moc_soma.cpp debug/moc_neuralnetworkgui.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug/moc_learningstacistics.cpp debug/moc_de.cpp debug/moc_layerssize.cpp debug/moc_mainwindow.cpp debug/moc_networksettings.cpp debug/moc_soma.cpp debug/moc_neuralnetworkgui.cpp
debug/moc_learningstacistics.cpp: src/Singleton.h \
		src/EnumTypes.h \
		learningstacistics.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) learningstacistics.h -o debug/moc_learningstacistics.cpp

debug/moc_de.cpp: src/Singleton.h \
		src/EnumTypes.h \
		de.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) de.h -o debug/moc_de.cpp

debug/moc_layerssize.cpp: ui_layerssize.h \
		src/Singleton.h \
		src/EnumTypes.h \
		layerssize.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) layerssize.h -o debug/moc_layerssize.cpp

debug/moc_mainwindow.cpp: ui_mainwindow.h \
		networksettings.h \
		ui_networksettings.h \
		layerssize.h \
		ui_layerssize.h \
		src/Singleton.h \
		src/EnumTypes.h \
		soma.h \
		de.h \
		src/neuralNetwork/NeuralNetwork.h \
		src/trainingAlgorithms/Individual.h \
		src/neuralNetwork/Layer.h \
		src/neuralNetwork/Neuron.h \
		src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/LinearNeuron.h \
		src/trainingAlgorithms/EvolutionaryAlgorithm.h \
		src/trainingAlgorithms/Population.h \
		src/trainingAlgorithms/SOMA.h \
		src/trainingAlgorithms/DifferentialEvolution.h \
		learningstacistics.h \
		src/FileManager.h \
		src/ReadDataFile.h \
		src/WriteDataFile.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o debug/moc_mainwindow.cpp

debug/moc_networksettings.cpp: ui_networksettings.h \
		layerssize.h \
		ui_layerssize.h \
		src/Singleton.h \
		src/EnumTypes.h \
		soma.h \
		de.h \
		networksettings.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) networksettings.h -o debug/moc_networksettings.cpp

debug/moc_soma.cpp: src/Singleton.h \
		src/EnumTypes.h \
		soma.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) soma.h -o debug/moc_soma.cpp

debug/moc_neuralnetworkgui.cpp: ui_neuralnetworkgui.h \
		neuralnetworkgui.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) neuralnetworkgui.h -o debug/moc_neuralnetworkgui.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_de.h ui_layerssize.h ui_mainwindow.h ui_networksettings.h ui_soma.h ui_neuralnetworkgui.h
compiler_uic_clean:
	-$(DEL_FILE) ui_de.h ui_layerssize.h ui_mainwindow.h ui_networksettings.h ui_soma.h ui_neuralnetworkgui.h
ui_de.h: de.ui
	/usr/bin/uic-qt4 de.ui -o ui_de.h

ui_layerssize.h: layerssize.ui
	/usr/bin/uic-qt4 layerssize.ui -o ui_layerssize.h

ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

ui_networksettings.h: networksettings.ui
	/usr/bin/uic-qt4 networksettings.ui -o ui_networksettings.h

ui_soma.h: soma.ui
	/usr/bin/uic-qt4 soma.ui -o ui_soma.h

ui_neuralnetworkgui.h: neuralnetworkgui.ui
	/usr/bin/uic-qt4 neuralnetworkgui.ui -o ui_neuralnetworkgui.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

debug/ReadDataFile.o: src/ReadDataFile.cpp src/ReadDataFile.h \
		src/Singleton.h \
		src/EnumTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/ReadDataFile.o src/ReadDataFile.cpp

debug/Singleton.o: src/Singleton.cpp src/Singleton.h \
		src/EnumTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/Singleton.o src/Singleton.cpp

debug/WriteDataFile.o: src/WriteDataFile.cpp src/WriteDataFile.h \
		src/Singleton.h \
		src/EnumTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/WriteDataFile.o src/WriteDataFile.cpp

debug/FileManager.o: src/FileManager.cpp src/FileManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/FileManager.o src/FileManager.cpp

debug/Layer.o: src/neuralNetwork/Layer.cpp src/neuralNetwork/Layer.h \
		src/neuralNetwork/Neuron.h \
		src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/LinearNeuron.h \
		src/EnumTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/Layer.o src/neuralNetwork/Layer.cpp

debug/LinearNeuron.o: src/neuralNetwork/LinearNeuron.cpp src/neuralNetwork/LinearNeuron.h \
		src/neuralNetwork/Neuron.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/LinearNeuron.o src/neuralNetwork/LinearNeuron.cpp

debug/NeuralNetwork.o: src/neuralNetwork/NeuralNetwork.cpp src/neuralNetwork/NeuralNetwork.h \
		src/trainingAlgorithms/Individual.h \
		src/neuralNetwork/Layer.h \
		src/neuralNetwork/Neuron.h \
		src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/LinearNeuron.h \
		src/EnumTypes.h \
		src/Singleton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/NeuralNetwork.o src/neuralNetwork/NeuralNetwork.cpp

debug/Neuron.o: src/neuralNetwork/Neuron.cpp src/neuralNetwork/Neuron.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/Neuron.o src/neuralNetwork/Neuron.cpp

debug/RecognizeTool.o: src/neuralNetwork/RecognizeTool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/RecognizeTool.o src/neuralNetwork/RecognizeTool.cpp

debug/SigmoidalBPNeuron.o: src/neuralNetwork/SigmoidalBPNeuron.cpp src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/Neuron.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/SigmoidalBPNeuron.o src/neuralNetwork/SigmoidalBPNeuron.cpp

debug/SigmoidalNeuron.o: src/neuralNetwork/SigmoidalNeuron.cpp src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/Neuron.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/SigmoidalNeuron.o src/neuralNetwork/SigmoidalNeuron.cpp

debug/SigmoidalUPNeuron.o: src/neuralNetwork/SigmoidalUPNeuron.cpp src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/Neuron.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/SigmoidalUPNeuron.o src/neuralNetwork/SigmoidalUPNeuron.cpp

debug/TanhNeuron.o: src/neuralNetwork/TanhNeuron.cpp src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/Neuron.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/TanhNeuron.o src/neuralNetwork/TanhNeuron.cpp

debug/DifferentialEvolution.o: src/trainingAlgorithms/DifferentialEvolution.cpp src/trainingAlgorithms/DifferentialEvolution.h \
		src/trainingAlgorithms/EvolutionaryAlgorithm.h \
		src/trainingAlgorithms/Population.h \
		src/trainingAlgorithms/Individual.h \
		src/neuralNetwork/NeuralNetwork.h \
		src/neuralNetwork/Layer.h \
		src/neuralNetwork/Neuron.h \
		src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/LinearNeuron.h \
		src/EnumTypes.h \
		src/Singleton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/DifferentialEvolution.o src/trainingAlgorithms/DifferentialEvolution.cpp

debug/EvolutionaryAlgorithm.o: src/trainingAlgorithms/EvolutionaryAlgorithm.cpp src/trainingAlgorithms/EvolutionaryAlgorithm.h \
		src/trainingAlgorithms/Population.h \
		src/trainingAlgorithms/Individual.h \
		src/neuralNetwork/NeuralNetwork.h \
		src/neuralNetwork/Layer.h \
		src/neuralNetwork/Neuron.h \
		src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/LinearNeuron.h \
		src/EnumTypes.h \
		src/Singleton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/EvolutionaryAlgorithm.o src/trainingAlgorithms/EvolutionaryAlgorithm.cpp

debug/Individual.o: src/trainingAlgorithms/Individual.cpp src/trainingAlgorithms/Individual.h \
		src/neuralNetwork/NeuralNetwork.h \
		src/neuralNetwork/Layer.h \
		src/neuralNetwork/Neuron.h \
		src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/LinearNeuron.h \
		src/EnumTypes.h \
		src/Singleton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/Individual.o src/trainingAlgorithms/Individual.cpp

debug/Population.o: src/trainingAlgorithms/Population.cpp src/trainingAlgorithms/Population.h \
		src/trainingAlgorithms/Individual.h \
		src/neuralNetwork/NeuralNetwork.h \
		src/neuralNetwork/Layer.h \
		src/neuralNetwork/Neuron.h \
		src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/LinearNeuron.h \
		src/EnumTypes.h \
		src/Singleton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/Population.o src/trainingAlgorithms/Population.cpp

debug/SOMA.o: src/trainingAlgorithms/SOMA.cpp src/trainingAlgorithms/SOMA.h \
		src/trainingAlgorithms/EvolutionaryAlgorithm.h \
		src/trainingAlgorithms/Population.h \
		src/trainingAlgorithms/Individual.h \
		src/neuralNetwork/NeuralNetwork.h \
		src/neuralNetwork/Layer.h \
		src/neuralNetwork/Neuron.h \
		src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/LinearNeuron.h \
		src/EnumTypes.h \
		src/Singleton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/SOMA.o src/trainingAlgorithms/SOMA.cpp

debug/learningstacistics.o: learningstacistics.cpp learningstacistics.h \
		src/Singleton.h \
		src/EnumTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/learningstacistics.o learningstacistics.cpp

debug/de.o: de.cpp de.h \
		src/Singleton.h \
		src/EnumTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/de.o de.cpp

debug/layerssize.o: layerssize.cpp layerssize.h \
		ui_layerssize.h \
		src/Singleton.h \
		src/EnumTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/layerssize.o layerssize.cpp

debug/mainwindow.o: mainwindow.cpp mainwindow.h \
		ui_mainwindow.h \
		networksettings.h \
		ui_networksettings.h \
		layerssize.h \
		ui_layerssize.h \
		src/Singleton.h \
		src/EnumTypes.h \
		soma.h \
		de.h \
		src/neuralNetwork/NeuralNetwork.h \
		src/trainingAlgorithms/Individual.h \
		src/neuralNetwork/Layer.h \
		src/neuralNetwork/Neuron.h \
		src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/LinearNeuron.h \
		src/trainingAlgorithms/EvolutionaryAlgorithm.h \
		src/trainingAlgorithms/Population.h \
		src/trainingAlgorithms/SOMA.h \
		src/trainingAlgorithms/DifferentialEvolution.h \
		learningstacistics.h \
		src/FileManager.h \
		src/ReadDataFile.h \
		src/WriteDataFile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/mainwindow.o mainwindow.cpp

debug/networksettings.o: networksettings.cpp networksettings.h \
		ui_networksettings.h \
		layerssize.h \
		ui_layerssize.h \
		src/Singleton.h \
		src/EnumTypes.h \
		soma.h \
		de.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/networksettings.o networksettings.cpp

debug/soma.o: soma.cpp soma.h \
		src/Singleton.h \
		src/EnumTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/soma.o soma.cpp

debug/main.o: main.cpp neuralnetworkgui.h \
		ui_neuralnetworkgui.h \
		mainwindow.h \
		ui_mainwindow.h \
		networksettings.h \
		ui_networksettings.h \
		layerssize.h \
		ui_layerssize.h \
		src/Singleton.h \
		src/EnumTypes.h \
		soma.h \
		de.h \
		src/neuralNetwork/NeuralNetwork.h \
		src/trainingAlgorithms/Individual.h \
		src/neuralNetwork/Layer.h \
		src/neuralNetwork/Neuron.h \
		src/neuralNetwork/TanhNeuron.h \
		src/neuralNetwork/SigmoidalUPNeuron.h \
		src/neuralNetwork/SigmoidalNeuron.h \
		src/neuralNetwork/SigmoidalBPNeuron.h \
		src/neuralNetwork/LinearNeuron.h \
		src/trainingAlgorithms/EvolutionaryAlgorithm.h \
		src/trainingAlgorithms/Population.h \
		src/trainingAlgorithms/SOMA.h \
		src/trainingAlgorithms/DifferentialEvolution.h \
		learningstacistics.h \
		src/FileManager.h \
		src/ReadDataFile.h \
		src/WriteDataFile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/main.o main.cpp

debug/neuralnetworkgui.o: neuralnetworkgui.cpp neuralnetworkgui.h \
		ui_neuralnetworkgui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/neuralnetworkgui.o neuralnetworkgui.cpp

debug/moc_learningstacistics.o: debug/moc_learningstacistics.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_learningstacistics.o debug/moc_learningstacistics.cpp

debug/moc_de.o: debug/moc_de.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_de.o debug/moc_de.cpp

debug/moc_layerssize.o: debug/moc_layerssize.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_layerssize.o debug/moc_layerssize.cpp

debug/moc_mainwindow.o: debug/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_mainwindow.o debug/moc_mainwindow.cpp

debug/moc_networksettings.o: debug/moc_networksettings.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_networksettings.o debug/moc_networksettings.cpp

debug/moc_soma.o: debug/moc_soma.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_soma.o debug/moc_soma.cpp

debug/moc_neuralnetworkgui.o: debug/moc_neuralnetworkgui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_neuralnetworkgui.o debug/moc_neuralnetworkgui.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

